{{- $fullName := include "app.fullname" . -}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/custom-http-errors: "418"
    {{- if .Values.env_details.contains_live_data }}
    kubernetes.io/ingress.class: "modsec01"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecAuditEngine RelevantOnly
      SecAuditLog /var/log/nginx/error.log
      SecAuditLogType Serial
      SecAuditLogParts AHKZ
      SecAuditLogFormat JSON
      SecAction "id:900110,phase:1,nolog,pass,t:none,setvar:tx.inbound_anomaly_score_threshold=6,setvar:tx.outbound_anomaly_score_threshold=4"
      SecRuleUpdateActionById 949110 "t:none,deny,status:423,logdata:%{SERVER_NAME}"
      SecRuleUpdateActionById 959100 "t:none,deny,status:423,logdata:%{SERVER_NAME}"
      SecRuleRemoveById 921110
      SecRule REQUEST_URI "@contains /add-case-note" "phase:1,nolog,pass,id:10000,ctl:ruleRemoveTargetById=942100;ARGS:case-note-body,ctl:ruleRemoveTargetById=942100;ARGS:case-note-subject"
    {{- else }}
    kubernetes.io/ingress.class: "nginx"
    {{- end }}
spec:
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    {{ if .Values.ingress.cert_secret }}secretName: {{ .Values.ingress.cert_secret }}{{ end }}
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ $fullName }}
              servicePort: http
