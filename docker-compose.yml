version: '3.1'
services:
  redis:
    image: 'bitnami/redis:6.2'
    networks:
      - hmpps
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    depends_on:
        - auth-db
    ports:
      - '8090:8090'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8090/auth/health']
    environment:
      - SERVER_PORT=8090
      - SPRING_PROFILES_ACTIVE=dev,delius,local-postgres
      - DELIUS_ENDPOINT_URL=http://wiremock:8080/delius
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/auth-db
      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0
      - DELIUS_ENABLED=true
      - MANAGE_USERS_API_ENABLED=true
      - MANAGE_USERS_API_ENDPOINT_URL=http://hmpps-manage-users-api:8080

  hmpps-manage-users:
    image: quay.io/hmpps/hmpps-manage-users-api:latest
    networks:
      - hmpps
    container_name: hmpps-manage-users
    depends_on:
      - hmpps-auth
      - nomis-user-roles-api
      - hmpps-external-users-api
    ports:
      - "8096:8096"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8096/health" ]
    environment:
      - SERVER_PORT=8096
      - HMPPS_AUTH_ENDPOINT_URL=http://hmpps-auth:8090/auth
      - API_BASE_URL_OAUTH=http://hmpps-auth:8090/auth
      - SPRING_PROFILES_ACTIVE=dev
      - EXTERNAL_USERS_ENDPOINT_URL=http://hmpps-external-users-api:8098
      - NOMIS_ENDPOINT_URL=http://nomis-user-roles-api:8097
      - DELIUS_ENDPOINT_URL=http://wiremock:8080/delius
      - AUTHORIZATION_SERVER_TOKEN_ENDPOINT_URL=http://hmpps-auth:8090/auth/oauth/token

  nomis-user-roles-api:
    image: quay.io/hmpps/nomis-user-roles-api:latest
    networks:
      - hmpps
    container_name: nomis-user-roles-api
    depends_on:
      - hmpps-auth
    ports:
      - "8097:8097"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8097/health" ]
    environment:
      - SERVER_PORT=8097
      - SPRING_PROFILES_ACTIVE=dev
      - API_BASE_URL_OAUTH=http://hmpps-auth:8090/auth
  
  hmpps-external-users-api:
      image: quay.io/hmpps/hmpps-external-users-api:latest
      networks:
        - hmpps
      container_name: hmpps-external-users-api
      depends_on:
        - auth-db
        - hmpps-auth
      ports:
        - "8098:8098"
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8098/health/ping"]
      environment:
        - SERVER_PORT=8098
        - SPRING_PROFILES_ACTIVE=dev,local-postgres
        - SPRING_R2DBC_URL=r2dbc:postgresql://auth-db:5432/auth-db?sslmode=prefer
        - SPRING_FLYWAY_URL=jdbc:postgresql://auth-db:5432/auth-db?sslmode=prefer
        - API_BASE_URL_OAUTH=http://hmpps-auth:8090/auth
        - HMPPS_SQS_PROVIDER=localstack
        - HMPPS_SQS_LOCALSTACKURL=http://localstack:4566  

  community-api:
    image: quay.io/hmpps/community-api:latest
    networks:
      - hmpps
    container_name: community-api
    ports:
      - '8091:8080'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/health']
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev

  interventions-service:
    image: quay.io/hmpps/hmpps-interventions-service
    restart: always
    networks:
      - hmpps
    container_name: interventions-service
    depends_on:
      - postgres
    ports:
      - '8092:8080'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/health']
    environment:
      - SPRING_PROFILES_ACTIVE=local,seed
      - POSTGRES_URI=postgres:5432
      - COMMUNITYAPI_BASEURL=http://community-api:8080
      - ASSESSRISKSANDNEEDS_BASEURL=http://assess-risks-and-needs:8080
      - REFERANDMONITORANDDELIUS_BASEURL=http://hmpps-interventions-ui-wiremock-1:8080

  postgres:
    image: postgres:14.17-alpine
    container_name: postgres
    networks:
      - hmpps
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - ./testutils/docker/postgres:/docker-entrypoint-initdb.d:ro

  auth-db:
    image: postgres:15
    networks:
      - hmpps
    container_name: auth-db
    restart: always
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_USER=admin
      - POSTGRES_DB=auth-db
    healthcheck:
      test: pg_isready -d auth-db

  wiremock:
    image: wiremock/wiremock
    networks:
      - hmpps
    restart: always
    ports:
      - "9092:8080"
    volumes:
      - ./wiremock_mappings:/home/wiremock/mappings
    command: '--verbose'

  assess-risks-and-needs:
    image: quay.io/hmpps/hmpps-assess-risks-and-needs:latest
    networks:
      - hmpps
    container_name: assess-risks-and-needs
    restart: always
    ports:
      - "8094:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    environment:
      - SERVER_PORT=8080
      - OAUTH_ENDPOINT_URL=http://hmpps-auth:8090/auth
      - ASSESSMENTAPI_BASEURL=http://offender-assessments-api:8080
      - API_CLIENT_ID=interventions
      - API_CLIENT_SECRET=clientsecret
      - SPRING_PROFILES_ACTIVE=oasys-rsr,dev
      - DATABASE_ENDPOINT=postgres:5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password

  offender-assessments-api:
    image: quay.io/hmpps/offender-assessments-api:latest
    networks:
      - hmpps
    container_name: offender-assessments-api
    restart: always
    ports:
      - "8095:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
    environment:
      - SERVER_PORT=8080
      - OAUTH_ENDPOINT_URL=http://hmpps-auth:8090/auth
      - SPRING_PROFILES_ACTIVE=dev

  localstack:
      image: localstack/localstack:3
      networks:
        - hmpps
      container_name: localstack-pl
      ports:
        - "4566:4566"
      environment:
        - SERVICES=sqs
      volumes:
        - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"

networks:
  hmpps:
