version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.11
  snyk: snyk/snyk@0.0.12
  node: circleci/node@4.1.0
  veracode: orb-01scan/sast-orb@0.0.9

executors:
  integration:
    docker:
      - image: cimg/node:14.16.0-browsers
      - image: rodolpheche/wiremock:2.27.2-alpine
        command: ["--port", "9091"]
      - image: bitnami/redis:6.0
        command: ["/opt/bitnami/scripts/redis/run.sh", "--port", "6380"]
        environment:
          ALLOW_EMPTY_PASSWORD: "yes"

jobs:
  build:
    environment:
      PACT_BROKER_BASE_URL: "https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
      PACT_BROKER_USERNAME: "interventions"
    executor:
      name: hmpps/node
      tag: 14.16.0-browsers
    steps:
      - checkout
      - node/install-npm:
          version: 7.5.4
      - node/install-packages
      - run: npm run test
      - store_artifacts:
          path: 'pact/pacts'
      - run:
          name: Upload pact files to broker
          command: |
            npx pact-broker publish pact/pacts \
              --broker-base-url $PACT_BROKER_BASE_URL \
              --consumer-app-version $CIRCLE_SHA1 --tag $CIRCLE_BRANCH \
              -u $PACT_BROKER_USERNAME -p $PACT_BROKER_PASSWORD
      - run: npm run build
      - run: npm run scripts:typecheck
      - run: npm run lint

  tag_pact_version:
    environment:
      PACT_BROKER_BASE_URL: "https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
      PACT_BROKER_USERNAME: "interventions"
    executor: hmpps/node
    parameters:
      tag:
        type: string
    steps:
      - run:
          name: Tag contract version with deployment
          command: |
            npx --package='@pact-foundation/pact-node' pact-broker create-version-tag \
              --pacticipant="Interventions UI" --version="$CIRCLE_SHA1" --tag="<< parameters.tag >>" \
              --broker-base-url="$PACT_BROKER_BASE_URL" --broker-username="$PACT_BROKER_USERNAME" --broker-password="$PACT_BROKER_PASSWORD"

  assemble:
    executor:
      name: hmpps/node
      tag: 14.16.0-browsers
    steps:
      - checkout
      - node/install-npm:
          version: 7.5.4
      - node/install-packages
      - run: npm run build:prod
      - run: npm prune --production --no-audit
      - run:
          # copies what the Dockerfile does, without build-info
          name: Package production code for scanning
          command: tar czf hmpps-interventions-ui.tar.gz package*.json assets/ dist/ node_modules/
      - persist_to_workspace:
          root: .
          paths:
            - hmpps-interventions-ui.tar.gz

  appsec_scan:
    executor: veracode/default
    steps:
      - attach_workspace:
          at: ./build
      - veracode/policy-scan:
          filepath: ./build/hmpps-interventions-ui.tar.gz
          teams: hmpps-interventions

  integration_test:
    executor: integration
    steps:
      - checkout
      - node/install-npm:
          version: 7.5.4
      - node/install-packages
      - run: npm run build
      - run: # Run linter after build because the integration test code depends on compiled typescript...
          command: npm run lint
      - run:
          command: npm run start:test
          background: true
      - run: npm run int-test
      - store_artifacts:
          path: integration_tests/videos
      - store_artifacts:
          path: integration_tests/screenshots

  vulnerability_scan:
    executor:
      name: hmpps/node
      tag: 14.16.0-browsers
    parameters:
      monitor:
        type: boolean
        default: false
    steps:
      - checkout
      - run: npm install -q
      - snyk/scan:
          project: '${CIRCLE_PROJECT_REPONAME}'
          monitor-on-build: << parameters.monitor >>
          organization: "digital-probation-services"
          severity-threshold: "high" # note: this does not affect snyk 'monitor' commands
          fail-on-issues: true

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - integration_test
      - hmpps/helm_lint
      - vulnerability_scan:
          name: vulnerability_scan_and_monitor
          monitor: true
          filters:
            branches:
              only:
                - main
      - vulnerability_scan:
          filters:
            branches:
              ignore:
                - main
      - hmpps/build_docker:
          name: build_docker_publish
          snyk-scan: true
          git-lfs: true
          filters:
            branches:
              only:
                - main
      - hmpps/build_docker:
          publish: false
          snyk-scan: true
          git-lfs: true
          filters:
            branches:
              ignore:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          slack_notification: true
          slack_channel_name: "interventions-dev-notifications"
          filters:
            branches:
              only:
                - main
          requires:
            - build
            - integration_test
            - hmpps/helm_lint
            - build_docker_publish
            - vulnerability_scan_and_monitor
          context:
            - hmpps-common-vars
      - tag_pact_version:
          name: "tag_pact_version_dev"
          tag: "deployed:dev"
          requires: [deploy_dev]
          context: [hmpps-common-vars]
      - approve_postdev:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_research
          env: "research"
          show_changelog: true
          slack_notification: true
          slack_channel_name: "interventions-dev-notifications"
          requires:
            - approve_postdev
          context:
            - hmpps-common-vars
            - hmpps-interventions-ui-research
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          show_changelog: true
          slack_notification: true
          slack_channel_name: "interventions-dev-notifications"
          requires:
            - approve_postdev
          context:
            - hmpps-common-vars
            - hmpps-interventions-ui-preprod
      - tag_pact_version:
          name: "tag_pact_version_preprod"
          tag: "deployed:preprod"
          requires: [deploy_preprod]
          context: [hmpps-common-vars]
      - approve_prod:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          show_changelog: true
          slack_notification: true
          slack_channel_name: "interventions-alerts"
          requires:
            - approve_prod
          context:
            - hmpps-common-vars
            - hmpps-interventions-ui-prod
      - tag_pact_version:
          name: "tag_pact_version_prod"
          tag: "deployed:prod"
          requires: [deploy_prod]
          context: [hmpps-common-vars]

  nightly:
    triggers:
      - schedule:
          cron: "0 7 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_security_audit
      - assemble
      - appsec_scan:
          requires: [assemble]
          context: [veracode-credentials]
      - vulnerability_scan:
          name: vulnerability_scan_and_monitor
          monitor: true
      - hmpps/build_docker:
          publish: false
          snyk-scan: true
          git-lfs: true
